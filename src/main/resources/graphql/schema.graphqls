type Query {
    users: [User]
    userById(id: ID!): User
    roles: [Role]
    rolesByUser(userInput: UserInput): [Role]
    permissions: [Permission]
    permissionById(id: ID!): Permission
}

type Mutation {
    addUser(userInput: UserInput): User
    updateUser(userInput: UserInput): User
    deleteUser(userInput: UserInput): ID
    addRole(roleInput: RoleInput): Role
    addPermission(permissionInput: PermissionInput): Permission
    updatePermission(permissionInput: PermissionInput): Permission
    deletePermission(permissionInput: PermissionInput): ID
}

input UserInput {
    name: String!
    email: String!
}

input RoleInput {
    userId: ID!
    role: String!
}

input PermissionInput {
    name: String!
    description: String
}

type User {
    id: ID!
    name: String!
    email: String!
}

type Role {
    user: User!
    role: String!
}

type Permission {
    id: ID!
    name: String!
    description: String
}